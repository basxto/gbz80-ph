replace {
 xor	a, %1
} by {
 ; dead peephole 1 removed dead xor a
} if notUsed('af')

replace {
 inc	%1
} by {
 ; dead peephole 2 removed dead inc %1
} if notUsed(%1), notUsed('f'), notSame(%1 '(hl)')

replace {
 dec	%1
} by {
 ; dead peephole 3 removed dead dec %1
} if notUsed(%1), notUsed('f'), notSame(%1 '(hl)')

replace {
 sub	a, %1
} by {
 ; dead peephole 4 removed dead sub a, %1
} if notUsed('af')

replace {
 sbc	a, %1
} by {
 ; dead peephole 5 removed dead sbc a, %1
} if notUsed('af')

replace {
 cp	a, %1
} by {
 ; dead peephole 6 removed dead cp a, %1
} if  notUsed('f')

replace {
 and	a, %1
} by {
 ; dead peephole 7 removed dead and a, %1
} if notUsed('af')

replace {
 or	a, %1
} by {
 ; dead peephole 8 removed dead and a, %1
} if notUsed('af')

replace {
 add	a, %1
} by {
 ; dead peephole 9 removed dead add a, %1
} if notUsed('af')

replace {
 adc	a, %1
} by {
 ; dead peephole 10 removed dead adc a, %1
} if notUsed('af')
